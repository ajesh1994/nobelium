{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { launchImageLibraryAsync, MediaTypeOptions } from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegistrationPictureUploadScreen = function RegistrationPictureUploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var uploadImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield launchImageLibraryAsync({\n        mediaTypes: MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.canceled) {\n        setImage(result.assets[0].uri);\n      }\n    });\n    return function uploadImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Button, {\n      title: \"Upload your first image!\",\n      onPress: uploadImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Onboarding\");\n      },\n      title: \"Continue\"\n    })]\n  });\n};","map":{"version":3,"names":["useState","View","Button","Image","launchImageLibraryAsync","MediaTypeOptions","jsx","_jsx","jsxs","_jsxs","RegistrationPictureUploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","image","setImage","uploadImage","_ref2","_asyncToGenerator","result","mediaTypes","All","allowsEditing","aspect","quality","canceled","assets","uri","apply","arguments","style","flex","alignItems","justifyContent","children","title","onPress","source","width","height","navigate"],"sources":["/Users/Biraveen/Documents/GitHub/nobelium/src/pages/RegistrationPictureUploadScreen.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { View, Text, Button, StyleSheet, TextInput, Image } from \"react-native\";\nimport { user } from \"../mocks/user\";\nimport { launchImageLibraryAsync, MediaTypeOptions } from \"expo-image-picker\";\n\nexport const RegistrationPictureUploadScreen = ({ navigation }: any) => {\n  const [image, setImage] = useState<string | null>(null);\n\n  const uploadImage = async () => {\n    let result = await launchImageLibraryAsync({\n      mediaTypes: MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setImage(result.assets[0].uri);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Button title=\"Upload your first image!\" onPress={uploadImage} />\n      {image && (\n        <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\n      )}\n      <Button\n        onPress={() => navigation.navigate(\"Onboarding\")}\n        title=\"Continue\"\n      />\n    </View>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAGjC,SAASC,uBAAuB,EAAEC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9E,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC1D,IAAAC,SAAA,GAA0Bb,QAAQ,CAAgB,IAAI,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAIC,MAAM,SAASjB,uBAAuB,CAAC;QACzCkB,UAAU,EAAEjB,gBAAgB,CAACkB,GAAG;QAChCC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACL,MAAM,CAACM,QAAQ,EAAE;QACpBV,QAAQ,CAACI,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MAChC;IACF,CAAC;IAAA,gBAXKX,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWhB;EAED,OACEtB,KAAA,CAACR,IAAI;IAAC+B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvE7B,IAAA,CAACL,MAAM;MAACmC,KAAK,EAAC,0BAA0B;MAACC,OAAO,EAAEpB;IAAY,CAAE,CAAC,EAChEF,KAAK,IACJT,IAAA,CAACJ,KAAK;MAACoC,MAAM,EAAE;QAAEV,GAAG,EAAEb;MAAM,CAAE;MAACgB,KAAK,EAAE;QAAEQ,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAE,CACrE,EACDlC,IAAA,CAACL,MAAM;MACLoC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM1B,UAAU,CAAC8B,QAAQ,CAAC,YAAY,CAAC;MAAA,CAAC;MACjDL,KAAK,EAAC;IAAU,CACjB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}