{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { LoginScreen } from \"./src/pages/LoginScreen\";\nimport { RegistrationScreen } from \"./src/pages/RegistrationScreen\";\nimport { OnboardingScreen } from \"./src/pages/OnboardingScreen\";\nimport { HomeScreenSelectorScreen } from \"./src/pages/HomeScreenSelectorScreen\";\nimport { HomeScreen } from \"./src/pages/HomeScreen\";\nimport CardFlipScreen from \"./src/pages/HomePage\";\nimport { LandingScreen } from \"./src/pages/LandingScreen\";\nimport { useAsyncStorage } from \"@react-native-async-storage/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { RegistrationNameScreen } from \"./src/pages/RegistrationNameScreen\";\nimport { RegistrationDobScreen } from \"./src/pages/RegistrationDobScreen\";\nimport { RegistrationPictureUploadScreen } from \"./src/pages/RegistrationPictureUploadScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Root = function Root() {\n  var _useContext = useContext(AuthContext),\n    isLoggedIn = _useContext.isLoggedIn,\n    setIsLoggedIn = _useContext.setIsLoggedIn;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    checking = _useState2[0],\n    setIsChecking = _useState2[1];\n  var _useAsyncStorage = useAsyncStorage(\"@token\"),\n    getItem = _useAsyncStorage.getItem;\n  var Stack = createStackNavigator();\n  useEffect(function () {\n    var checkIfUserIsLoggedIn = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var item = yield getItem();\n        if (item !== null) {\n          setIsLoggedIn(true);\n        }\n        setIsChecking(false);\n      });\n      return function checkIfUserIsLoggedIn() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkIfUserIsLoggedIn();\n  }, []);\n  if (checking) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: isLoggedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"HomeScreenSelectorScreen\",\n          component: HomeScreenSelectorScreen\n        }), _jsx(Stack.Screen, {\n          name: \"HomeScreen1\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"HomeScreen2\",\n          component: CardFlipScreen\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegistrationScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Onboarding\",\n          component: OnboardingScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegistrationName\",\n          component: RegistrationNameScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegistrationDob\",\n          component: RegistrationDobScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegistrationPictureUpload\",\n          component: RegistrationPictureUploadScreen\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","NavigationContainer","createStackNavigator","LoginScreen","RegistrationScreen","OnboardingScreen","HomeScreenSelectorScreen","HomeScreen","CardFlipScreen","LandingScreen","useAsyncStorage","View","StyleSheet","ActivityIndicator","RegistrationNameScreen","RegistrationDobScreen","RegistrationPictureUploadScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Root","_useContext","isLoggedIn","setIsLoggedIn","_useState","_useState2","_slicedToArray","checking","setIsChecking","_useAsyncStorage","getItem","Stack","checkIfUserIsLoggedIn","_ref","_asyncToGenerator","item","apply","arguments","style","styles","container","children","Navigator","Screen","name","component","create","flex","alignItems","justifyContent"],"sources":["/Users/Biraveen/Documents/GitHub/nobelium/root.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { LoginScreen } from \"./src/pages/LoginScreen\";\nimport { RegistrationScreen } from \"./src/pages/RegistrationScreen\";\nimport { OnboardingScreen } from \"./src/pages/OnboardingScreen\";\nimport { HomeScreenSelectorScreen } from \"./src/pages/HomeScreenSelectorScreen\";\nimport { HomeScreen } from \"./src/pages/HomeScreen\";\nimport CardFlipScreen from \"./src/pages/HomePage\";\nimport { LandingScreen } from \"./src/pages/LandingScreen\";\nimport { useAsyncStorage } from \"@react-native-async-storage/async-storage\";\nimport { View, StyleSheet, ActivityIndicator, Image } from \"react-native\";\nimport { RegistrationNameScreen } from \"./src/pages/RegistrationNameScreen\";\nimport { RegistrationDobScreen } from \"./src/pages/RegistrationDobScreen\";\nimport { RegistrationPictureUploadScreen } from \"./src/pages/RegistrationPictureUploadScreen\";\nexport const Root = () => {\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\n  const [checking, setIsChecking] = useState(true);\n  const { getItem } = useAsyncStorage(\"@token\");\n\n  const Stack = createStackNavigator();\n\n  useEffect(() => {\n    const checkIfUserIsLoggedIn = async () => {\n      const item = await getItem();\n\n      // user is logged in\n      if (item !== null) {\n        setIsLoggedIn(true);\n      }\n\n      setIsChecking(false);\n    };\n\n    checkIfUserIsLoggedIn();\n  }, []);\n\n  if (checking) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {isLoggedIn ? (\n          <>\n            <Stack.Screen name=\"HomeScreenSelectorScreen\" component={HomeScreenSelectorScreen} />\n            <Stack.Screen name=\"HomeScreen1\" component={HomeScreen} />\n            <Stack.Screen name=\"HomeScreen2\" component={CardFlipScreen} />\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Landing\" component={LandingScreen} />\n            <Stack.Screen name=\"Register\" component={RegistrationScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Onboarding\" component={OnboardingScreen} />\n            <Stack.Screen\n              name=\"RegistrationName\"\n              component={RegistrationNameScreen}\n            />\n            <Stack.Screen\n              name=\"RegistrationDob\"\n              component={RegistrationDobScreen}\n            />\n            <Stack.Screen\n              name=\"RegistrationPictureUpload\"\n              component={RegistrationPictureUploadScreen}\n            />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}