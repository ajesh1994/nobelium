{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { user } from \"../mocks/user\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegistrationDobScreen = function RegistrationDobScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var _useState3 = useState(user.dateOfBirth),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1];\n  var onChange = function onChange(_event, selectedDate) {\n    var currentDate = selectedDate;\n    setShow(false);\n    setDate(currentDate);\n  };\n  var showDatepicker = function showDatepicker() {\n    return setShow(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Input your date of birth\"\n    }), _jsx(Text, {\n      children: date.toString()\n    }), _jsx(Button, {\n      onPress: showDatepicker,\n      title: \"Select DoB\"\n    }), show && _jsx(DateTimePicker, {\n      mode: \"date\",\n      value: date,\n      onChange: onChange\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"RegistrationPictureUpload\");\n      },\n      title: \"Continue\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    borderColor: \"gray\",\n    width: 200,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10\n  }\n});","map":{"version":3,"names":["useState","View","Text","Button","StyleSheet","user","DateTimePicker","jsx","_jsx","jsxs","_jsxs","RegistrationDobScreen","_ref","navigation","_useState","_useState2","_slicedToArray","show","setShow","_useState3","dateOfBirth","_useState4","date","setDate","onChange","_event","selectedDate","currentDate","showDatepicker","style","styles","container","children","toString","onPress","title","mode","value","navigate","create","flex","alignItems","justifyContent","input","borderColor","width","borderWidth","borderRadius","padding"],"sources":["/Users/Biraveen/Documents/GitHub/nobelium/src/pages/RegistrationDobScreen.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { View, Text, Button, StyleSheet, TextInput } from \"react-native\";\nimport { user } from \"../mocks/user\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nexport const RegistrationDobScreen = ({ navigation }: any) => {\n  const [show, setShow] = useState(false);\n  const [date, setDate] = useState(user.dateOfBirth);\n\n  const onChange = (_event: any, selectedDate: any) => {\n    const currentDate = selectedDate;\n    setShow(false);\n    setDate(currentDate);\n  };\n\n  const showDatepicker = () => setShow(true);\n  return (\n    <View style={styles.container}>\n      <Text>Input your date of birth</Text>\n      <Text>{date.toString()}</Text>\n\n      <Button onPress={showDatepicker} title=\"Select DoB\" />\n      {show && <DateTimePicker mode=\"date\" value={date} onChange={onChange} />}\n      <Button\n        onPress={() => navigation.navigate(\"RegistrationPictureUpload\")}\n        title=\"Continue\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  input: {\n    borderColor: \"gray\",\n    width: 200,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAEjC,SAASC,IAAI;AACb,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChD,IAAAC,SAAA,GAAwBd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAwBnB,QAAQ,CAACK,IAAI,CAACe,WAAW,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;IAA3CG,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpB,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,MAAW,EAAEC,YAAiB,EAAK;IACnD,IAAMC,WAAW,GAAGD,YAAY;IAChCR,OAAO,CAAC,KAAK,CAAC;IACdK,OAAO,CAACI,WAAW,CAAC;EACtB,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;IAAA,OAASV,OAAO,CAAC,IAAI,CAAC;EAAA;EAC1C,OACER,KAAA,CAACT,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BxB,IAAA,CAACN,IAAI;MAAA8B,QAAA,EAAC;IAAwB,CAAM,CAAC,EACrCxB,IAAA,CAACN,IAAI;MAAA8B,QAAA,EAAEV,IAAI,CAACW,QAAQ,CAAC;IAAC,CAAO,CAAC,EAE9BzB,IAAA,CAACL,MAAM;MAAC+B,OAAO,EAAEN,cAAe;MAACO,KAAK,EAAC;IAAY,CAAE,CAAC,EACrDlB,IAAI,IAAIT,IAAA,CAACF,cAAc;MAAC8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEf,IAAK;MAACE,QAAQ,EAAEA;IAAS,CAAE,CAAC,EACxEhB,IAAA,CAACL,MAAM;MACL+B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMrB,UAAU,CAACyB,QAAQ,CAAC,2BAA2B,CAAC;MAAA,CAAC;MAChEH,KAAK,EAAC;IAAU,CACjB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAG1B,UAAU,CAACmC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACLC,WAAW,EAAE,MAAM;IACnBC,KAAK,EAAE,GAAG;IACVC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}